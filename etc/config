# Number of executions of the whole algorithm
executions = 9

OutputGenerationFile = generation
OutputSolutionFile = solution--

# each N generations the statistics are written
OuputEachGenerations = 100

#ProblemFileConfig = etc/bag.conf
#ProblemFileConfig = etc/function.conf
ProblemFileConfig = etc/image.conf

NumberIsles = 8

# 1 ring only connected to the right
# 2 ring connected both sides
# 3 all with all
Topology = 1

# Number of individuals for a population into a island
NumberIndividuals = 128

# Number of genes for each individual
NumberGenes = 256

# Number of generations
NumberGenerations = 12000

# Number of generations before the migration process start
MigrationEveryGenerations = 500

# Migration type
# 1: Select NumberMigrants randomly
# 2: select the NumberMigrants worsts individuals
# 3: select the NumberMigrants best individuals
EmigrationType = 1

# Number of migrants 
NumberMigrants = 8

# Migration type
# 1: Select NumberMigrants randomly
# 2: select the NumberMigrants worsts individuals
# 3: select the NumberMigrants best individuals
ImmigrationType = 1

# Type of parent selection (method of constructing the mating pool):
#  0: basic seleccion (two parents randomly 
# 1: Fitness-proportional selection
# 2: Stochastic universal sampling
# 3: Ranking selection (linear)
# 4: Tournament selection
ParentSelectionType = 4

# num parents to produce offspring
NumParents = 16

# Expected number of offspring 
NumberOffspring = 32

# Tournament size (just in case of tournament selection). Range: [2,IndividualsNumber].
TournamentSize = 4

# Type of crossover:
# 1: One-point crossover
# 3: N-point crossover
# 4: Parameterized uniform crossover
# 5: ordered crossover, only one point crossover, valid only for permutations
# 6: real ordered crossover, two  point crossover, valid only for permutations, Introduction to evolutionary computing, eiben,smith pag 55
CrossoverType = 6

# Number of crossover points (just in case of N-point crossover). Range: [1,GenesNumber-1]
CrossoverPointsNumber = 3

# Exchange probability (just in case of Parameterized Uniform Crossover)
ExchangeProbability = 0.5

# 1 basic, 
# 2 rate
# 3 permutation, valid only for permutations
# 4 insertion, valid only for permutations Introduction to evolutionary computing, eiben,smith pag 45 
# 5 short permutation, valid only for permutations, similar to 4 but just flip i with i+1
MutationType = 4

# Mutation rate for each gen, remember for each gen so if a individual has N gens the cumulated probability 
# that an individual get a mutation will be: (1-(1-MutationRate)^NumGenes) therefore
# this value should be a low rate if the number of genes is high
MutationRate = 0.00075

# Mutation probability. For MutationType basic. Just one gene will mutate with p=MutationProbability
MutationProbability= 0.7

# Type of survivor selection:
# 1: Generational model
# 2: Steady state model
# 3: ifbetter: remove worst from parents + offspring
SurvivorSelectionType = 3

# Generational gap (just in case of steady state model for survivor selection). Range: [1, IndividualsNumber].
GenerationalGap = 29

# evaluation type, 1 Normal evaluation 2 Use openCL Evaluation
EvaluationType = 1
